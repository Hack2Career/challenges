def calculate (r, unit, arr, n):
    if n == 0:
        return -1 
        
    totalFoodRequired = r * unit 
    foodTillNow = 0 
    house = 0 
        
    for house in range (n):
        foodTillNow += arr[house] 
        if foodTillNow>=totalFoodRequired:
            break 
    if totalFoodRequired > foodTillNow:
        return 0
    return house + 1
	  
r = int (input ())
unit = int (input ())
n = int (input ())
  
arr = list (map (int, input ().split ()))
print (calculate (r, unit, arr, n))

----------------------------------------------------------------------------------------------
import java.util.*;
class Main
{
  public static int solve (int r, int unit, int arr[], int n)
  {
    if (arr == null)
      return -1;
    int res = r * unit;
    int sum = 0;
    int count = 0;
    for (int i = 0; i < n; i++)
      {
	sum = sum + arr[i];
	count++;
	if (sum >= res)
	  break;
      }
    if (sum < res)
        return 0;
    return count;
  }
  public static void main (String[]args)
  {
    Scanner sc = new Scanner (System.in);
    int r = sc.nextInt ();
    int unit = sc.nextInt ();
    int n = sc.nextInt ();
    int arr[] = new int[n];

    for (int i = 0; i < n; i++)
      arr[i] = sc.nextInt ();
    System.out.println (solve (r, unit, arr, n));
  }
}

----------------------------------------------------------------------------------------------------------

#include<bits/stdc++.h>
using namespace std;
int calculate (int r, int unit, int arr[], int n)
{
  if (n == 0)
    return -1;
  int totalFoodRequired = r * unit;
  int foodTillNow = 0;
  int house = 0;
  for (house = 0; house < n; ++house)
    {
      foodTillNow += arr[house];
      if (foodTillNow >= totalFoodRequired)
	{
	  break;
	}
    }
  if (totalFoodRequired > foodTillNow)
    return 0;
  return house + 1;
}
int main ()
{
  int r;
  cin >> r;
  int unit;
  cin >> unit;
  int n;
  cin >> n;
  int arr[n];
  for (int i = 0; i < n; ++i)
    {
      cin >> arr[i];
    }
  cout << calculate (r, unit, arr, n);
  return 0;
}